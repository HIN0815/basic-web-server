AWSTemplateFormatVersion: ‘2010-09-09’
Description: Deploy basic wordpress

Parameters: 
  InstanceType:
    Description: "WebServer EC2 instance type"
    Type: String
    Default: “t2.micro”
  
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: Lab VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: Lab Internet Gateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: Public Subnet 1

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: Private Subnet 1

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public Route Table

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0	
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Private Route Table

  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets: 
        -  !Ref “PublicSubnet1”
        -  !Ref “PublicSubnet2”

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
        DefaultActions:
          Type: forward
          TargetGroupArn: !Ref "ALBTargetGroup"
        LoadBalancerArn: !Ref "ApplicationLoadBalancer"
        Port: 80
        Protocol: "HTTP"

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: "/wordpress/wp-admin/install.php",  
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Port: 80
      Protocol: "HTTP"
      UnhealthyThresholdCount: 5
      VpcId: !Ref Vpc   
      TargetGroupAttributes:
        - Key: "stickiness.enabled"
          Value: "true" 
        - Key: "stickiness.type"
          Value: "lb_cookie" 
        - Key: "stickiness.lb_cookie.duration_seconds"
          Value: "30"

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Enable HTTP access via port 80 locked down to the load balancer + SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          SourceSecurityGroupId: 
            Fn::Select: 0
              Fn::GetAtt:
                ApplicationLoadBalancer
                SecurityGroups
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
      VpcId: !Ref Vpc

  WebServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      VPCZoneIdentifier: !Ref Subnets" 
      LaunchConfigurationName" : !Ref LaunchConfig"
      MinSize: "1"
      MaxSize: "5"
      DesiredCapacity: !Ref "WebServerCapacity"
      TargetGroupARNs : 
        - Ref: "ALBTargetGroup" 
    CreationPolicy: 
      ResourceSignal: 
        Timeout : "PT15M"    
    UpdatePolicy: 
      AutoScalingRollingUpdate: 
        MinInstancesInService: "1"
        MaxBatchSize: "1"
        PauseTime: "PT15M"
        WaitOnResourceSignals": "true"

  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          wordpress_install: 
          - "install_cfn"
            "install_wordpress"
        install_cfn:
          "files": 
            "/etc/cfn/cfn-hup.conf": 
              "content":
                "Fn::Join":
                  - ""
                    - "[main]\n"
                      "stack="
                      !Ref "AWS::StackId"
                      "\n"
                      "region="
                      !Ref "AWS::Region"
                      "\n"
              "mode"  : "000400"
              "owner" : "root"
              "group" : "root"
            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": 
              "content":
                "Fn::Join":
                  - ""
                    - "[cfn-auto-reloader-hook]\n"
                      "triggers=post.update\n"
                      "path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init\n"
                      "action=/opt/aws/bin/cfn-init -v "
                      "         --stack "
                      !Ref "AWS::StackName" 
                      "         --resource LaunchConfig ",
                      "         --configsets wordpress_install "
                      "         --region "
                      !Ref "AWS::Region"
                      "\n"
              "mode"  : "000400",
              "owner" : "root",
              "group" : "root"
          "services" :
            "sysvinit" : 
              "cfn-hup" :
                "enabled" : "true"
                "ensureRunning" : "true"
                "files" :
                  "/etc/cfn/cfn-hup.conf"
                  "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
        install_wordpress:
          packages:
            yum:
              php: []
              php-mysql: []
              mysql: []
              httpd: []
          sources:
            "/var/www/html" : "http://wordpress.org/latest.tar.gz"
          files:
            "/tmp/create-wp-config" :
              "content" :
                "Fn::Join" :
                  - ""
                    - "#!/bin/bash\n"
                      "cp /var/www/html/wordpress/wp-config-sample.php /var/www/html/wordpress/wp-config.php\n"
                      "sed -i \"s/'database_name_here'/'"
                      !Ref "DBName" 
                      "'/g\" wp-config.php\n"
                      "sed -i \"s/'username_here'/'"
                      !Ref "DBUser" 
                      "'/g\" wp-config.php\n"
                      "sed -i \"s/'password_here'/'"
                      !Ref "DBPassword" 
                      "'/g\" wp-config.php\n"
                      "sed -i \"s/'localhost'/'"
                      "Fn::GetAtt" : 
                        - "DBInstance"
                          "Endpoint.Address" 
                      "'/g\" wp-config.php\n"
              "mode" : "000500",
              "owner" : "root",
              "group" : "root"
          "commands" : 
            "01_configure_wordpress" :
              "command" : "/tmp/create-wp-config"
              "cwd" : "/var/www/html/wordpress"
          "services" : 
            "sysvinit" : 
              "httpd" :
                "enabled" : "true"
                "ensureRunning" : "true"
    Properties:
      ImageId:
        Fn::FindInMap:
          - "AWSRegionArch2AMI"
            !Ref "AWS::Region"
            Fn::FindInMap: 
              - "AWSInstanceType2Arch"
                !Ref "InstanceType"
            "Arch" 
      InstanceType: !Ref "InstanceType" 
      SecurityGroups" : 
        - !Ref "WebServerSecurityGroup"
      KeyName: !Ref "KeyName"
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
              - "#!/bin/bash -xe\n"
                "yum update -y aws-cfn-bootstrap\n"
                "/opt/aws/bin/cfn-init -v "
                "         --stack "
                !Ref "AWS::StackName"
                "         --resource LaunchConfig "
                "         --configsets wordpress_install "
                "         --region "
                !Ref "AWS::Region"
                "\n"
                "/opt/aws/bin/cfn-signal -e $? "
                "         --stack "
                Ref "AWS::StackName"
                "         --resource WebServerGroup "
                "         --region "
                !Ref "AWS::Region"
                "\n"

  DBEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Open database for access"
      SecurityGroupIngress: 
        IpProtocol: "tcp"
        FromPort: "3306"
        ToPort: "3306"
        SourceSecurityGroupId: !Ref "WebServerSecurityGroup"
        VpcId: !Ref "Vpc"

  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Ref DBName
      Engine: "MySQL"
      MultiAZ: !Ref "MultiAZDatabase" 
      MasterUsername: !Ref "DBUser" 
      MasterUserPassword: !Ref "DBPassword" 
      DBInstanceClass: !Ref "DBClass" 
      AllocatedStorage: !Ref "DBAllocatedStorage" 
      VPCSecurityGroups: 
        - Fn::GetAtt: 
            - DBEC2SecurityGroup 
              GroupId

Outputs:
  VPC:
    Description: VPC
    Value: !Ref VPC
  AZ1:
    Description: Availability Zone 1
    Value: !GetAtt 

    

